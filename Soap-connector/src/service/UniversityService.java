
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UniversityService", targetNamespace = "http://Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UniversityService {


    /**
     * 
     * @return
     *     returns service.GetAllStudentSubjectsByNameResponse.SubjectsByName
     */
    @WebMethod
    @WebResult(name = "subjectsByName", targetNamespace = "")
    @RequestWrapper(localName = "getAllStudentSubjectsByName", targetNamespace = "http://Service/", className = "service.GetAllStudentSubjectsByName")
    @ResponseWrapper(localName = "getAllStudentSubjectsByNameResponse", targetNamespace = "http://Service/", className = "service.GetAllStudentSubjectsByNameResponse")
    public service.GetAllStudentSubjectsByNameResponse.SubjectsByName getAllStudentSubjectsByName();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "clearSubjects", targetNamespace = "http://Service/", className = "service.ClearSubjects")
    @ResponseWrapper(localName = "clearSubjectsResponse", targetNamespace = "http://Service/", className = "service.ClearSubjectsResponse")
    public void clearSubjects();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "subjectsNumber", targetNamespace = "")
    @RequestWrapper(localName = "countStudentSubjects", targetNamespace = "http://Service/", className = "service.CountStudentSubjects")
    @ResponseWrapper(localName = "countStudentSubjectsResponse", targetNamespace = "http://Service/", className = "service.CountStudentSubjectsResponse")
    public int countStudentSubjects();

    /**
     * 
     * @param ects
     * @param name
     */
    @WebMethod
    @RequestWrapper(localName = "addSubject", targetNamespace = "http://Service/", className = "service.AddSubject")
    @ResponseWrapper(localName = "addSubjectResponse", targetNamespace = "http://Service/", className = "service.AddSubjectResponse")
    public void addSubject(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "ects", targetNamespace = "")
        Integer ects);

    /**
     * 
     * @return
     *     returns service.GetSubjectsAbove5EctsResponse.SubjectsAbove5Ects
     */
    @WebMethod
    @WebResult(name = "subjectsAbove5Ects", targetNamespace = "")
    @RequestWrapper(localName = "getSubjectsAbove5Ects", targetNamespace = "http://Service/", className = "service.GetSubjectsAbove5Ects")
    @ResponseWrapper(localName = "getSubjectsAbove5EctsResponse", targetNamespace = "http://Service/", className = "service.GetSubjectsAbove5EctsResponse")
    public service.GetSubjectsAbove5EctsResponse.SubjectsAbove5Ects getSubjectsAbove5Ects();

    /**
     * 
     * @return
     *     returns service.GetSubjectNamesResponse.Subjects
     */
    @WebMethod
    @WebResult(name = "subjects", targetNamespace = "")
    @RequestWrapper(localName = "getSubjectNames", targetNamespace = "http://Service/", className = "service.GetSubjectNames")
    @ResponseWrapper(localName = "getSubjectNamesResponse", targetNamespace = "http://Service/", className = "service.GetSubjectNamesResponse")
    public service.GetSubjectNamesResponse.Subjects getSubjectNames();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "binaryUploaded", targetNamespace = "")
    @RequestWrapper(localName = "encodeStudentAttachment", targetNamespace = "http://Service/", className = "service.EncodeStudentAttachment")
    @ResponseWrapper(localName = "encodeStudentAttachmentResponse", targetNamespace = "http://Service/", className = "service.EncodeStudentAttachmentResponse")
    public String encodeStudentAttachment();

}
